---
export interface Props {
  post: {
    slug: string;
    data: {
      title: string;
      description: string;
      pubDate: Date;
      tags: string[];
      image?: string;
      featured?: boolean;
    };
  };
}

const { post } = Astro.props;
const { slug, data } = post;
---

<article class={`post-card industrial-border ${data.featured ? 'featured' : ''}`}>
  <a href={`/posts/${slug}`} class="post-link">
    {data.image && (
      <div class="post-image">
        <img src={data.image} alt={data.title} loading="lazy" />
      </div>
    )}
    
    <div class="post-content">
      <header class="post-header">
        <h3 class="post-title">{data.title}</h3>
        <time class="post-date" datetime={data.pubDate.toISOString()}>
          {data.pubDate.toLocaleDateString('zh-CN', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
      </header>
      
      <p class="post-description">{data.description}</p>
      
      {data.tags && data.tags.length > 0 && (
        <div class="post-tags">
          {data.tags.map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
  </a>
</article>

<style>
  .post-card {
    background-color: var(--color-card);
    overflow: hidden;
    transition: all 0.3s ease;
    height: 100%;
    position: relative;
  }

  .post-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .post-card.featured {
    background: linear-gradient(135deg, var(--color-card) 0%, var(--color-hover) 100%);
  }

  .post-card.featured::after {
    content: 'â˜…';
    position: absolute;
    top: 1rem;
    right: 1rem;
    color: var(--color-accent);
    font-size: 1.5rem;
    font-weight: bold;
  }

  .post-link {
    display: flex;
    flex-direction: column;
    height: 100%;
    color: inherit;
    text-decoration: none;
  }

  .post-image {
    aspect-ratio: 16/9;
    overflow: hidden;
    background: var(--color-code-bg);
    border-bottom: var(--border-width) var(--border-style) var(--color-border);
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
    border: none;
  }

  .post-card:hover .post-image img {
    transform: scale(1.05);
  }

  .post-content {
    padding: 1.5rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .post-header {
    margin-bottom: 0.75rem;
  }

  .post-title {
    font-family: var(--font-mono);
    font-size: 1.125rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    line-height: 1.3;
    color: var(--color-text);
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .post-date {
    font-size: 0.75rem;
    color: var(--color-secondary);
    text-transform: uppercase;
    letter-spacing: 1px;
    font-family: var(--font-mono);
    font-weight: 500;
  }

  .post-description {
    color: var(--color-secondary);
    font-size: 0.9rem;
    line-height: 1.5;
    flex-grow: 1;
    margin-bottom: 1rem;
    font-family: var(--font-sans);
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: auto;
  }

  .tag {
    background-color: var(--color-code-bg);
    color: var(--color-accent);
    padding: 0.25rem 0.5rem;
    border: var(--border-width) var(--border-style) var(--color-border);
    font-size: 0.75rem;
    font-family: var(--font-mono);
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  @media (max-width: 768px) {
    .post-content {
      padding: 1rem;
    }

    .post-title {
      font-size: 1rem;
    }
  }
</style>