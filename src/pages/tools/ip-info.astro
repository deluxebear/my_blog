---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
---

<Layout title="IP信息查看器 - 数字花园" description="查看你的外网IP地址、地理位置、ISP信息等详细网络信息">
  <Header />
  
  <main class="main">
    <div class="container">
      <header class="page-header">
        <h1 class="page-title">IP信息查看器</h1>
        <p class="page-description">
          获取你的外网IP地址及相关网络信息，包括地理位置、ISP提供商等详细数据
        </p>
      </header>

      <!-- IP信息显示区域 -->
      <section class="ip-info-section">
        <div class="ip-card industrial-border" id="ip-card">
          <div class="loading-state" id="loading-state">
            <div class="loading-spinner"></div>
            <p>正在获取IP信息...</p>
          </div>
          
          <div class="ip-content hidden" id="ip-content">
            <div class="ip-main">
              <div class="ip-address-section">
                <h2 class="ip-label">你的IP地址</h2>
                <div class="ip-address" id="ip-address">---.---.---.---</div>
                <button class="copy-btn" id="copy-ip-btn" title="复制IP地址">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                    <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                    <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                  </svg>
                </button>
              </div>
            </div>
            
            <div class="ip-details">
              <div class="detail-grid">
                <div class="detail-item">
                  <div class="detail-label">地理位置</div>
                  <div class="detail-value" id="location">获取中...</div>
                </div>
                <div class="detail-item">
                  <div class="detail-label">ISP提供商</div>
                  <div class="detail-value" id="isp">获取中...</div>
                </div>
                <div class="detail-item">
                  <div class="detail-label">组织机构</div>
                  <div class="detail-value" id="org">获取中...</div>
                </div>
                <div class="detail-item">
                  <div class="detail-label">时区</div>
                  <div class="detail-value" id="timezone">获取中...</div>
                </div>
                <div class="detail-item">
                  <div class="detail-label">经纬度</div>
                  <div class="detail-value" id="coordinates">获取中...</div>
                </div>
                <div class="detail-item">
                  <div class="detail-label">IP类型</div>
                  <div class="detail-value" id="ip-type">获取中...</div>
                </div>
              </div>
            </div>
          </div>
          
          <div class="error-state hidden" id="error-state">
            <div class="error-icon">⚠️</div>
            <h3>获取IP信息失败</h3>
            <p>无法获取IP信息，请检查网络连接或稍后重试。</p>
            <button class="retry-btn" id="retry-btn">重新获取</button>
          </div>
        </div>
      </section>

      <!-- 功能说明 -->
      <section class="features-section">
        <div class="features-content industrial-border">
          <h2 class="features-title">功能特点</h2>
          <div class="features-grid">
            <div class="feature-item">
              <div class="feature-icon">🌍</div>
              <h3>地理位置</h3>
              <p>显示IP地址对应的国家、省份、城市等地理位置信息</p>
            </div>
            <div class="feature-item">
              <div class="feature-icon">🏢</div>
              <h3>ISP信息</h3>
              <p>显示互联网服务提供商和组织机构信息</p>
            </div>
            <div class="feature-item">
              <div class="feature-icon">🕒</div>
              <h3>时区信息</h3>
              <p>显示IP地址所在地区的时区信息</p>
            </div>
            <div class="feature-item">
              <div class="feature-icon">📍</div>
              <h3>精确坐标</h3>
              <p>提供经纬度坐标信息（精度取决于IP类型）</p>
            </div>
            <div class="feature-item">
              <div class="feature-icon">🔒</div>
              <h3>隐私保护</h3>
              <p>所有查询都在客户端进行，不记录任何个人信息</p>
            </div>
            <div class="feature-item">
              <div class="feature-icon">📋</div>
              <h3>一键复制</h3>
              <p>支持一键复制IP地址，方便在其他地方使用</p>
            </div>
          </div>
        </div>
      </section>

      <!-- 使用说明 -->
      <section class="usage-section">
        <div class="usage-content industrial-border">
          <h2 class="usage-title">使用说明</h2>
          <div class="usage-text">
            <p><strong>自动检测：</strong>页面加载时会自动获取你的外网IP地址和相关信息。</p>
            <p><strong>信息准确性：</strong>IP地理位置信息基于IP地址数据库，可能与实际位置有一定偏差。</p>
            <p><strong>隐私说明：</strong>本工具仅显示公开的IP信息，不会收集或存储任何个人数据。</p>
            <p><strong>网络要求：</strong>需要连接到互联网才能获取IP信息。</p>
          </div>
        </div>
      </section>
    </div>
  </main>
</Layout>

<style>
  .main {
    min-height: calc(100vh - 80px);
    padding: 2rem 0;
  }

  .page-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .page-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    font-family: var(--font-mono);
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .page-description {
    font-size: 1.125rem;
    color: var(--color-secondary);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
    font-family: var(--font-sans);
  }

  .ip-info-section {
    margin-bottom: 3rem;
  }

  .ip-card {
    background-color: var(--color-card);
    padding: 2rem;
    max-width: 800px;
    margin: 0 auto;
    position: relative;
    min-height: 300px;
  }

  /* 加载状态 */
  .loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 200px;
    gap: 1rem;
  }

  .loading-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid var(--color-border);
    border-top: 3px solid var(--color-accent);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .loading-state p {
    color: var(--color-secondary);
    font-family: var(--font-mono);
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  /* IP内容 */
  .ip-content {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .ip-main {
    text-align: center;
  }

  .ip-address-section {
    position: relative;
    display: inline-block;
  }

  .ip-label {
    font-family: var(--font-mono);
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 1rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--color-secondary);
  }

  .ip-address {
    font-family: var(--font-mono);
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-accent);
    letter-spacing: 2px;
    margin-bottom: 0.5rem;
    padding: 1rem 2rem;
    background-color: var(--color-code-bg);
    border: 2px solid var(--color-border);
    border-radius: 8px;
    display: inline-block;
    position: relative;
  }

  .copy-btn {
    position: absolute;
    top: 50%;
    right: -50px;
    transform: translateY(-50%);
    background: var(--color-card);
    border: 2px solid var(--color-border);
    color: var(--color-secondary);
    padding: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    border-radius: 4px;
  }

  .copy-btn:hover {
    color: var(--color-accent);
    background-color: var(--color-hover);
    transform: translateY(-50%) translateY(-1px);
  }

  .copy-btn.copied {
    color: #28a745;
    border-color: #28a745;
  }

  .ip-details {
    border-top: 2px solid var(--color-border);
    padding-top: 2rem;
  }

  .detail-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .detail-item {
    background-color: var(--color-code-bg);
    padding: 1rem;
    border: 1px solid var(--color-border);
    border-radius: 4px;
  }

  .detail-label {
    font-family: var(--font-mono);
    font-size: 0.8rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--color-secondary);
    margin-bottom: 0.5rem;
  }

  .detail-value {
    font-family: var(--font-sans);
    font-size: 0.9rem;
    color: var(--color-text);
    font-weight: 500;
    word-break: break-word;
  }

  /* 错误状态 */
  .error-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 200px;
    gap: 1rem;
    text-align: center;
  }

  .error-icon {
    font-size: 3rem;
  }

  .error-state h3 {
    font-family: var(--font-mono);
    font-size: 1.2rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--color-text);
    margin: 0;
  }

  .error-state p {
    color: var(--color-secondary);
    font-family: var(--font-sans);
    font-size: 0.9rem;
    line-height: 1.5;
    margin: 0;
  }

  .retry-btn {
    background-color: var(--color-accent);
    color: var(--color-bg);
    border: 2px solid var(--color-accent);
    padding: 0.75rem 1.5rem;
    font-family: var(--font-mono);
    font-size: 0.8rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.2s ease;
    border-radius: 4px;
  }

  .retry-btn:hover {
    background-color: var(--color-text);
    border-color: var(--color-text);
    transform: translateY(-1px);
  }

  /* 功能特点 */
  .features-section {
    margin-bottom: 3rem;
  }

  .features-content {
    background-color: var(--color-card);
    padding: 2rem;
  }

  .features-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 2rem;
    text-align: center;
    font-family: var(--font-mono);
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--color-accent);
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .feature-item {
    text-align: center;
    padding: 1rem;
    background-color: var(--color-code-bg);
    border: 1px solid var(--color-border);
    border-radius: 4px;
  }

  .feature-icon {
    font-size: 2rem;
    margin-bottom: 1rem;
  }

  .feature-item h3 {
    font-family: var(--font-mono);
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .feature-item p {
    color: var(--color-secondary);
    font-size: 0.85rem;
    line-height: 1.5;
    margin: 0;
    font-family: var(--font-sans);
  }

  /* 使用说明 */
  .usage-section {
    margin-bottom: 2rem;
  }

  .usage-content {
    background-color: var(--color-card);
    padding: 2rem;
  }

  .usage-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    text-align: center;
    font-family: var(--font-mono);
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--color-accent);
  }

  .usage-text p {
    color: var(--color-secondary);
    font-size: 0.9rem;
    line-height: 1.6;
    margin-bottom: 1rem;
    font-family: var(--font-sans);
  }

  .usage-text strong {
    color: var(--color-text);
    font-weight: 600;
  }

  .hidden {
    display: none !important;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .page-title {
      font-size: 2rem;
    }

    .page-description {
      font-size: 1rem;
    }

    .ip-card {
      padding: 1.5rem;
    }

    .ip-address {
      font-size: 1.8rem;
      padding: 0.75rem 1rem;
    }

    .copy-btn {
      position: static;
      transform: none;
      margin-top: 1rem;
      display: block;
      margin-left: auto;
      margin-right: auto;
    }

    .detail-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .features-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .features-content,
    .usage-content {
      padding: 1.5rem;
    }
  }
</style>

<script>
  // IP信息获取和显示
  class IPInfoViewer {
    constructor() {
      this.loadingState = document.getElementById('loading-state');
      this.ipContent = document.getElementById('ip-content');
      this.errorState = document.getElementById('error-state');
      this.retryBtn = document.getElementById('retry-btn');
      this.copyBtn = document.getElementById('copy-ip-btn');
      
      this.init();
    }

    init() {
      this.fetchIPInfo();
      this.bindEvents();
    }

    bindEvents() {
      this.retryBtn?.addEventListener('click', () => {
        this.fetchIPInfo();
      });

      this.copyBtn?.addEventListener('click', () => {
        this.copyIPAddress();
      });
    }

    async fetchIPInfo() {
      this.showLoading();
      
      try {
        // 使用多个IP信息API作为备选
        const apis = [
          'https://ipapi.co/json/',
          'https://api.ipify.org?format=json',
          'https://httpbin.org/ip'
        ];

        let ipData = null;
        
        // 首先尝试获取详细信息
        try {
          const response = await fetch('https://ipapi.co/json/');
          if (response.ok) {
            ipData = await response.json();
          }
        } catch (error) {
          console.warn('Primary API failed:', error);
        }

        // 如果主要API失败，尝试备用API
        if (!ipData || !ipData.ip) {
          try {
            const response = await fetch('https://api.ipify.org?format=json');
            if (response.ok) {
              const basicData = await response.json();
              ipData = { ip: basicData.ip };
            }
          } catch (error) {
            console.warn('Backup API failed:', error);
          }
        }

        if (ipData && ipData.ip) {
          this.displayIPInfo(ipData);
        } else {
          throw new Error('无法获取IP信息');
        }
      } catch (error) {
        console.error('获取IP信息失败:', error);
        this.showError();
      }
    }

    displayIPInfo(data) {
      // 显示IP地址
      const ipElement = document.getElementById('ip-address');
      if (ipElement) {
        ipElement.textContent = data.ip || '未知';
      }

      // 显示详细信息
      this.updateDetailValue('location', this.formatLocation(data));
      this.updateDetailValue('isp', data.org || data.isp || '未知');
      this.updateDetailValue('org', data.org || '未知');
      this.updateDetailValue('timezone', data.timezone || '未知');
      this.updateDetailValue('coordinates', this.formatCoordinates(data));
      this.updateDetailValue('ip-type', this.getIPType(data.ip));

      this.showContent();
    }

    updateDetailValue(id, value) {
      const element = document.getElementById(id);
      if (element) {
        element.textContent = value;
      }
    }

    formatLocation(data) {
      const parts = [];
      if (data.city) parts.push(data.city);
      if (data.region) parts.push(data.region);
      if (data.country_name) parts.push(data.country_name);
      return parts.length > 0 ? parts.join(', ') : '未知';
    }

    formatCoordinates(data) {
      if (data.latitude && data.longitude) {
        return `${data.latitude}, ${data.longitude}`;
      }
      return '未知';
    }

    getIPType(ip) {
      if (!ip) return '未知';
      
      // 简单的IPv4/IPv6检测
      if (ip.includes(':')) {
        return 'IPv6';
      } else if (ip.includes('.')) {
        return 'IPv4';
      }
      return '未知';
    }

    async copyIPAddress() {
      const ipElement = document.getElementById('ip-address');
      const ip = ipElement?.textContent;
      
      if (!ip || ip === '未知') return;

      try {
        await navigator.clipboard.writeText(ip);
        
        // 显示复制成功反馈
        this.copyBtn.classList.add('copied');
        const originalHTML = this.copyBtn.innerHTML;
        this.copyBtn.innerHTML = `
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
            <polyline points="20,6 9,17 4,12"></polyline>
          </svg>
        `;
        
        setTimeout(() => {
          this.copyBtn.classList.remove('copied');
          this.copyBtn.innerHTML = originalHTML;
        }, 2000);
      } catch (error) {
        console.error('复制失败:', error);
        
        // 降级方案
        const textArea = document.createElement('textarea');
        textArea.value = ip;
        document.body.appendChild(textArea);
        textArea.select();
        
        try {
          document.execCommand('copy');
          this.copyBtn.classList.add('copied');
          setTimeout(() => {
            this.copyBtn.classList.remove('copied');
          }, 2000);
        } catch (fallbackError) {
          console.error('降级复制也失败了:', fallbackError);
        }
        
        document.body.removeChild(textArea);
      }
    }

    showLoading() {
      this.loadingState?.classList.remove('hidden');
      this.ipContent?.classList.add('hidden');
      this.errorState?.classList.add('hidden');
    }

    showContent() {
      this.loadingState?.classList.add('hidden');
      this.ipContent?.classList.remove('hidden');
      this.errorState?.classList.add('hidden');
    }

    showError() {
      this.loadingState?.classList.add('hidden');
      this.ipContent?.classList.add('hidden');
      this.errorState?.classList.remove('hidden');
    }
  }

  // 页面加载完成后初始化
  document.addEventListener('DOMContentLoaded', () => {
    new IPInfoViewer();
  });
</script>