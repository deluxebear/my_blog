---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import PostCard from '../components/PostCard.astro';
import SearchBox from '../components/SearchBox.astro';

// Get all posts and sort by date
const allPosts = await Astro.glob('../content/posts/*.{md,mdx}');
const posts = allPosts
  .map(post => ({
    slug: post.file.split('/').pop()?.replace(/\.mdx?$/, '') || '',
    data: {
      ...post.frontmatter,
      pubDate: new Date(post.frontmatter.pubDate)
    },
    content: post.compiledContent?.() || ''
  }))
  .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

const featuredPosts = posts.filter(post => post.data.featured).slice(0, 3);
const recentPosts = posts.slice(0, 6);
---

<Layout title="数字花园 - 探索web开发与创意编程">
  <Header />
  
  <main class="main">
    <div class="container">
      <!-- Hero Section -->
      <section class="hero">
        <div class="hero-content">
          <h1 class="hero-title">
            数字花园
            <span class="hero-subtitle">DIGITAL GARDEN</span>
          </h1>
          <p class="hero-description">
            探索 WEB 开发的奥秘，分享创意编程的灵感。<br>
            从前端技术到后端架构，从算法思维到设计美学。
          </p>
          <div class="hero-stats industrial-border">
            <div class="stat">
              <span class="stat-number">{posts.length}</span>
              <span class="stat-label">篇文章</span>
            </div>
            <div class="stat-divider">|</div>
            <div class="stat">
              <span class="stat-number">{featuredPosts.length}</span>
              <span class="stat-label">精选推荐</span>
            </div>
            <div class="stat-divider">|</div>
            <div class="stat">
              <span class="stat-number">∞</span>
              <span class="stat-label">持续更新</span>
            </div>
          </div>
        </div>
        <div class="hero-visual">
          <div class="code-snippet industrial-border">
            <div class="code-header">
              <span class="code-title">WELCOME.JS</span>
              <div class="window-controls">
                <div class="control"></div>
                <div class="control"></div>
                <div class="control"></div>
              </div>
            </div>
            <div class="code-content">
              <pre><code><span class="keyword">const</span> <span class="variable">explorer</span> <span class="operator">=</span> <span class="string">'你'</span><span class="punctuation">;</span>
<span class="keyword">const</span> <span class="variable">journey</span> <span class="operator">=</span> <span class="string">'开始'</span><span class="punctuation">;</span>

<span class="function">console</span><span class="punctuation">.</span><span class="method">log</span><span class="punctuation">(</span>
  <span class="template">`欢迎 {'${'}explorer} {'${'}journey} 探索！`</span>
<span class="punctuation">);</span></code></pre>
            </div>
          </div>
        </div>
      </section>

      <!-- Search Section -->
      <section class="search-section">
        <SearchBox />
      </section>

      <!-- Featured Posts -->
      {featuredPosts.length > 0 && (
        <section class="featured-section">
          <h2 class="section-title">精选文章</h2>
          <div class="posts-grid featured-grid">
            {featuredPosts.map(post => (
              <PostCard post={post} />
            ))}
          </div>
        </section>
      )}

      <!-- Recent Posts -->
      <section class="recent-section">
        <h2 class="section-title">最新文章</h2>
        <div class="posts-grid">
          {recentPosts.map(post => (
            <PostCard post={post} />
          ))}
        </div>
        
        {posts.length > 6 && (
          <div class="section-footer">
            <a href="/posts" class="btn btn-primary">
              查看所有文章 →
            </a>
          </div>
        )}
      </section>
    </div>
  </main>
</Layout>

<style>
  .main {
    min-height: calc(100vh - 80px);
  }

  .hero {
    padding: 4rem 0;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    min-height: 60vh;
  }

  .hero-title {
    font-size: 3.5rem;
    font-weight: 700;
    line-height: 1.1;
    margin-bottom: 1rem;
    text-transform: uppercase;
    letter-spacing: 2px;
  }

  .hero-subtitle {
    display: block;
    font-size: 1rem;
    color: var(--color-secondary);
    font-weight: 400;
    letter-spacing: 3px;
    margin-top: 0.5rem;
  }

  .hero-description {
    font-size: 1.125rem;
    color: var(--color-secondary);
    line-height: 1.6;
    margin-bottom: 2rem;
    font-family: var(--font-sans);
  }

  .hero-stats {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    padding: 1rem;
    background-color: var(--color-card);
  }

  .stat {
    text-align: center;
  }

  .stat-number {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    color: var(--color-accent);
    font-family: var(--font-mono);
  }

  .stat-label {
    font-size: 0.75rem;
    color: var(--color-secondary);
    text-transform: uppercase;
    letter-spacing: 1px;
    font-family: var(--font-mono);
  }

  .stat-divider {
    color: var(--color-border);
    font-size: 1.5rem;
    font-weight: bold;
  }

  .hero-visual {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .code-snippet {
    background-color: var(--color-card);
    overflow: hidden;
    box-shadow: var(--shadow-lg);
    max-width: 400px;
    width: 100%;
  }

  .code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 1rem;
    background-color: var(--color-code-bg);
    border-bottom: var(--border-width) var(--border-style) var(--color-border);
  }

  .code-title {
    font-family: var(--font-mono);
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .window-controls {
    display: flex;
    gap: 0.5rem;
  }

  .control {
    width: 12px;
    height: 12px;
    background-color: var(--color-border);
    border: var(--border-width) var(--border-style) var(--color-text);
  }

  .code-content {
    padding: 1rem;
    font-family: var(--font-mono);
    font-size: 0.875rem;
    line-height: 1.5;
  }

  .keyword { color: var(--color-accent); font-weight: bold; }
  .variable { color: var(--color-text); }
  .operator { color: var(--color-secondary); }
  .string { color: var(--color-accent); }
  .template { color: var(--color-accent); }
  .punctuation { color: var(--color-secondary); }
  .function { color: var(--color-text); font-weight: bold; }
  .method { color: var(--color-accent); }

  .search-section {
    padding: 2rem 0;
  }

  .section-title {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 2rem;
    text-align: center;
    font-family: var(--font-mono);
    text-transform: uppercase;
    letter-spacing: 2px;
    position: relative;
  }

  .section-title::after {
    content: '';
    position: absolute;
    bottom: -0.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 2px;
    background-color: var(--color-accent);
  }

  .featured-section,
  .recent-section {
    padding: 3rem 0;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .featured-grid {
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  }

  .section-footer {
    text-align: center;
  }

  @media (max-width: 1024px) {
    .hero {
      grid-template-columns: 1fr;
      gap: 2rem;
      text-align: center;
    }

    .hero-title {
      font-size: 2.5rem;
    }

    .posts-grid,
    .featured-grid {
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 1.5rem;
    }
  }

  @media (max-width: 768px) {
    .hero {
      padding: 2rem 0;
    }

    .hero-title {
      font-size: 2rem;
    }

    .hero-description {
      font-size: 1rem;
    }

    .hero-stats {
      flex-direction: column;
      gap: 1rem;
    }

    .stat-divider {
      display: none;
    }

    .posts-grid,
    .featured-grid {
      grid-template-columns: 1fr;
    }

    .section-title {
      font-size: 1.5rem;
    }
  }
</style>